name: Zip and Upload Examples

on:
  workflow_dispatch:
  release:
    types: [published, released, created]

jobs:
  zip-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Prepare solo-examples directory
        run: |
          echo "Copying examples to solo-examples directory..."
          rm -rf solo-examples
          mkdir -p solo-examples
          cp -r examples/* solo-examples/
          echo "Examples copied to solo-examples."

      - name: Zip each example directory
        run: |
          echo "Starting to zip example directories..."
          for dir in solo-examples/*/ ; do
            name=$(basename "$dir")
            zip_name="example-${name}.zip"
            echo "Zipping $dir to solo-examples/${zip_name}..."
            zip -r "solo-examples/${zip_name}" "$dir"
            echo "Finished zipping $dir."
          done
          echo "All example directories zipped."

      - name: Get latest release
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            if (releases.data.length === 0) {
              throw new Error('No releases found');
            }
            // Remove the template part from upload_url (everything after '{')
            const uploadUrl = releases.data[0].upload_url.split('{')[0];
            core.setOutput('upload_url', uploadUrl);

      - name: Upload zipped examples to latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Starting upload of zipped examples..."
          for zip in solo-examples/*.zip; do
            name=$(basename "$zip")
            echo "Uploading $zip as $name..."
            curl -sSL \
              -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/zip" \
              --data-binary @"$zip" \
              "${{ steps.get_release.outputs.upload_url }}?name=$name"
            echo "Finished uploading $name."
          done
          echo "All zipped examples uploaded."

      - name: Remove solo-examples directory
        run: |
          echo "Removing solo-examples directory..."
          rm -rf solo-examples
          echo "solo-examples directory removed."
